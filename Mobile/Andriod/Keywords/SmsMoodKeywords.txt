*** Settings ***
Library           Collections
Resource          ../Repository/SmsMoodRepository.txt
Library           ../../../Library/Mobile/AISAppiumEx.py
Resource          ../../Generic/Keywords/SmsGenericKeywords.txt
Resource          ../../../Common/Keywords/RedefineKeywords.txt
Library           OperatingSystem
Library           String

*** Keywords ***
mood Wait SMS
    [Arguments]    ${totalSms}    ${timeout}    ${sender}
    Log    In mood Wait SMS
    ${timeout}=    Convert To Integer    ${timeout}
    Run Keyword If    '${sender}'=='all'    Wait Until Keyword Succeeds    ${timeout} s    1 s    mood Wait SMS All Sender    ${totalSms}
    Run Keyword If    '${sender}'!='all'    Wait Until Keyword Succeeds    ${timeout} s    1 s    mood Wait SMS With Sender    ${totalSms}
    ...    ${sender}
    Log    Out mood Wait SMS

mood Open SMS App
    [Arguments]    ${remoteUrl}    ${platformName}    ${platformVersion}    ${udid}
    Log    In mood Open SMS App
    AISAppium Open Application    http://${remoteUrl}/wd/hub    platformName=${platformName}    platformVersion=${platformVersion}    udid=${udid}    appPackage=com.calea.echo    appActivity=com.calea.echo.MainActivity
    ...    deviceName=${remoteUrl}
    Log    Out mood Open SMS App

mood Wait SMS All Sender
    [Arguments]    ${totalSms}
    Comment    Log    In mood Wait SMS All Sender
    ${totalUnread}=    Set Variable    0
    @{unreadElements}    AISAppium Get Elements    ${lblUnreadNumber}
    : FOR    ${eachUnread}    IN    @{unreadElements}
    \    ${number}=    Convert To Integer    ${eachUnread.get_attribute('text')}
    \    ${totalUnread}=    Evaluate    ${number} + ${totalUnread}
    Run Keyword If    ${totalUnread} < ${totalSms}    FAIL    waiting more sms...
    Comment    Log    out mood Wait SMS All Sender

mood Read SMS
    [Arguments]    ${sender}    ${totalSms}=1
    Log    In Mood Read SMS
    @{emptyList}=    Create List
    @{messages}=    Create List
    @{senderNameElements}    AISAppium Get Elements    ${lblSenderName}
    : FOR    ${senderNameElement}    IN    @{senderNameElements}
    \    ${senderName}=    Convert To String    ${senderNameElement.get_attribute('text')}
    \    @{messages}=    Run Keyword If    '${senderName}' == '${sender}'    mood Collect SMS Message    ${senderNameElement}    ${totalSms}
    \    Run Keyword If    @{messages} != @{emptyList}    Exit For Loop
    Run Keyword If    @{messages} == @{emptyList}    FAIL    Not found sender to read SMS
    Press Keycode    4
    Log    Out Mood Read SMS
    [Return]    ${messages}

mood Collect SMS Message
    [Arguments]    ${senderElement}    ${totalSms}
    Log    In mood Collect SMS Message
    Evaluate    '${senderElement.click()}'
    sleep    1    Delay before read SMS
    ${totalSms}=    Convert To Integer    ${totalSms}
    ${counter}=    Set Variable    0
    @{messages}=    Create List
    @{messageElements}=    AISAPPium Get Elements    ${lblTextMessage}
    Convert To List    ${messageElements}
    Reverse List    ${messageElements}
    : FOR    ${messageElement}    IN    @{messageElements}
    \    ${message}    Convert To String    ${messageElement.get_attribute('text')}
    \    Run Keyword If    ${counter} < ${totalSms}    Append To List    ${messages}    ${message}
    \    ${counter}=    Evaluate    ${counter} + 1
    \    Run Keyword If    ${counter} >= ${totalSms}    Exit For Loop
    Log    Out mood Collect SMS
    [Return]    ${messages}

mood Clear All Unread SMS
    Log    Clear SMS
    ${status} =    Run Keyword And Return Status    Get Elements    ${fraUnreadFlag}    ${fraUnreadFlag}
    Return From Keyword If    '${status}'== 'False'    ${status}
    @{unreadElements}=    Get Elements    ${fraUnreadFlag}
    Comment    @{unreadElements}=    Get Elements    ${fraUnreadFlag}
    : FOR    ${eachUnread}    IN    @{unreadElements}
    \    Log To Console    Unread detail: ${eachUnread}
    \    Evaluate    '${eachUnread.click()}'
    \    Sleep    2
    \    Aisappium Click Element    ${btnSmsBack}
    Log    End Clear SMS
    [Return]    ${status}

mood Close SMS App
    [Arguments]    ${platformName}    ${udid}
    Log    In mood Close SMS App
    sleep    2
    Press Keycode    187
    Comment    sleep    2
    Wait Mobile Until Page Contains Element    xpath=(//android.widget.TextView[@text='mood'])
    Click Mobile Element    xpath=(//*[@clickable='true' and (@content-desc='mood' or @text='mood')])
    sleep    1
    close application
    Log    after close application
    sleep    1
    ${command}=    Set Variable    adb -s ${udid} shell am kill com.calea.echo
    Log    ${command}
    ${rc}=    Run And Return Rc    ${command}
    Log    ${rc}

mood Read All Unread SMS
    Log    Clear SMS
    @{CollectMessage}    Create List
    ${index}    Set Variable    0
    sleep    2
    : FOR    ${index}    IN RANGE    1000
    \    ${status}    Run Keyword And Return Status    AISAppiumEx.Aisappium Element Should Be Enabled    ${lblUnreadNumber}
    \    sleep    2
    \    Log    ${status}
    \    Exit For Loop If    '${status}'=='False'
    \    @{UnreadElementNew}=    Get Elements    ${lblUnreadNumber}
    \    ${RealUnreadElement}=    Set Variable    @{UnreadElementNew}[0]
    \    Log    ${RealUnreadElement.get_attribute('text')}
    \    ${number}=    Convert To Integer    ${RealUnreadElement.get_attribute('text')}
    \    Log    ${RealUnreadElement}
    \    @{messages}=    mood Collect SMS Message    ${RealUnreadElement}    ${number}
    \    Aisappium Click Element    ${btnSmsBack}
    \    @{CollectMessage}=    Collect Many Message    ${CollectMessage}    ${messages}
    \    Log    ${CollectMessage}
    Log    End Clear SMS
    [Return]    ${CollectMessage}

mood Wait SMS With Sender
    [Arguments]    ${TotalSMS}    ${Sender}
    Log    In mood Wait SMS with Sender
    ${intUnread}    Set Variable    0
    @{unreadElements}    AISAppium Get Elements    ${lblUnreadNumber}
    : FOR    ${eachUnread}    IN    @{unreadElements}
    \    ${number}=    Convert To Integer    ${eachUnread.get_attribute('text')}
    \    Run Keyword If    ${number} >= ${intUnread}    chack unread on sender    ${eachUnread.get_attribute('text')}    ${Sender}
    Log    Out mood Wait SMS with Sender

chack unread on sender
    [Arguments]    ${TotalSMS}    ${Sender}
    Log    In chack unread on sender
    ${tempLocatorFlag}    Replace String    ${tempLocatorUnreadWithSender}    -[totalMsg]-    ${TotalSMS}
    ${locatorSenderWithFlag}    Replace String    ${tempLocatorFlag}    -[Sender]-    ${Sender}
    AISAppiumEx.Wait Until Page Contains Element    ${locatorSenderWithFlag}
    Log    Out chack unread on sender

Collect Many Message
    [Arguments]    ${CollectMessage}    ${messages}
    Comment    ${One}    Create List    a    b
    Comment    ${Two}    Create List    c    d
    Comment    ${messages}    Create List    ${One}    ${Two}
    Comment    Log    ${messages}
    ${Length}    Get Length    ${messages}
    ${index}    Set Variable    0
    : FOR    ${index}    IN RANGE    ${Length}
    \    Log    @{messages}[${index}]
    \    ${MessageOrder}    Set Variable    @{messages}[${index}]
    \    Log    ${MessageOrder}
    \    Append To List    ${CollectMessage}    ${MessageOrder}
    \    Log    ${CollectMessage}
    [Return]    ${CollectMessage}
